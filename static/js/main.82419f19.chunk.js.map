{"version":3,"sources":["ScreenContext.js","StartScreen.js","DataSheetBase.js","DataSheet_localizationSheet.js","DataSheet_plcphase.js","DataSheet_position.js","DataSheet_records.js","App.js","serviceWorker.js","index.js"],"names":["ScreenContext","React","createContext","appActions","dataSheets","deviceInfo","locStrings","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","StartScreen","_Component","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","getValue_elPicker1","picker1","pickerValueChanged_elPicker1","event","setState","target","updateDataSlot","getValue_elPicker2","picker2","pickerValueChanged_elPicker2","textInputChanged_elField","field","getValue_elField","textAreaChanged_elTextarea","textarea","newVal","getValue_elTextarea","onClick_elButton","_asyncToGenerator","_callee","datetime","_context","input","mission","dataSlots","position","domain","issue","concat","transformValue","Date","toString","getDataSheet","items","onClick_elButton2","_callee2","_context2","window","alert","_inherits","_createClass","prevProps","prevState","_this2","layoutFlowStyle","baseStyle","transitionId","atTopOfScreenStack","transitionForward","animation","height","overflow","selection_picker1","dataSource_picker1","selection_picker2","dataSource_picker2","value_textcounter","String","JSON","stringify","e","count","transformPropValue_textcounter","enabledValue_button","value_query","transformPropValue_query","value_stamp","dataSheetRow","stamp","enabledValue_button2","createElement","className","style","boxSizing","backgroundColor","width","color","textAlign","start_title","start_headline","start_introduction","start_question_166092","Select","pointerEvents","onChange","every","item","Option","map","colValue","labelColValue","label","start_question_169966","start_question_843610","Input","display","start_field_543627","floatingLabel","start_testq3copy_34190","Textarea","start_textarea2_195442","Button","cursor","disabled","onClick","start_button_39620","start_buttoncopy_804957","Component","contextType","DataSheetBase","id","updateCb","lastAvailableKey","arr","lastKey","setupArrayKeys","json","requestedKeyPath","makeDefaultItems","options","filter","idx","newItem","splice","rowIndexForKey","replaceItemByRowIndex","Array","isArray","keyPath","_step","_iterator","_createForOfIteratorHelper","split","s","n","comp","f","query","slots","outUsedSlotsArray","scanIndex","expanded","index","indexOf","substring","slotRefStr","firstChar","includes","DataSheet_localizationSheet","_DataSheetBase","getStringsByLanguage","stringsByLang","row","locKey","langObj","storedItems","localStorage","getItem","parse","_get","setItem","DataSheet_plcphase","DataSheet_position","DataSheet_records","App","windowDidResize","formatId","w","innerWidth","screenFormatId","goToScreen","screenId","baseScreenId","path","history","_objectSpread","scrollTo","goBack","sheetId","addToDataSheet","newRow","actionId","sheet","promise","addItem","updateInDataSheet","replaceItemByKey","removeFromDataSheet","removeItem","slotId","setLanguage","dataSheetDidUpdate","dataSheet","updateLocalizationFromDataSheet","stringsObj","LocalizedStrings","en","createImageUrlFromProp","prop","dataSheetLoaded","screenTransitionForward","addEventListener","removeEventListener","loading","makeScreen","baseProps","atTop","forward","subpathId","screen","screenCtxProps","ds_activeLang","ds_issue","ds_q1","ds_q2","ds_q3","ds_q4","ds_prompt","ds_response","dataSheetRow_StartScreen","screenData_StartScreen","assign","Provider","Switch","Route","render","location","exact","withRouter","Boolean","hostname","match","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82419f19.chunk.js","sourcesContent":["import React from 'react';\n\n// This context is filled out by App when navigating into a screen.\nconst ScreenContext = React.createContext({\n  appActions: {},\n  dataSheets: {},\n  deviceInfo: {},\n  locStrings: {},\n});\nexport default ScreenContext;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ScreenContext from './ScreenContext';\n\n// UI framework component imports\nimport Select from 'muicss/lib/react/select';\nimport Option from 'muicss/lib/react/option';\nimport Input from 'muicss/lib/react/input';\nimport Textarea from 'muicss/lib/react/textarea';\nimport Button from 'muicss/lib/react/button';\n\nconst TEXTMAX=200 ;\n\nexport default class StartScreen extends Component {\n\n  static contextType = ScreenContext;\n\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    this.context.appActions.getDataSheet('records').items[0] = {} ;\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  }\n\n  \n  getValue_elPicker1 = () => {\n    return this.state.picker1 !== undefined ? this.state.picker1 : '';\n  }\n  \n  pickerValueChanged_elPicker1 = (event) => {\n    this.setState({picker1: event.target.value});\n    \n    this.context.appActions.updateDataSlot(\"ds_q1\", event.target.value);\n  }\n  \n  \n  getValue_elPicker2 = () => {\n    return this.state.picker2 !== undefined ? this.state.picker2 : '';\n  }\n  \n  pickerValueChanged_elPicker2 = (event) => {\n    this.setState({picker2: event.target.value});\n    \n    this.context.appActions.updateDataSlot(\"ds_q2\", event.target.value);\n  }\n  \n  textInputChanged_elField = (event) => {\n    this.setState({field: event.target.value});\n    \n    this.context.appActions.updateDataSlot(\"ds_q3\", event.target.value);\n  }\n  \n  getValue_elField = () => {\n    return this.state.field || '';\n  }\n  \n  textAreaChanged_elTextarea = (event) => {\n    this.setState({textarea: event.target.value});\n    \n    {\n      let newVal = event.target.value;\n      \n      let transformValue = (input) => {\n        // This function modifies the value written to the target data slot.\n        // There is a variable named 'input' that provides the input value.\n        return input;\n      }\n      newVal = transformValue(newVal);\n      \n      this.context.appActions.updateDataSlot(\"ds_issue\", newVal);\n    }\n  }\n  \n  getValue_elTextarea = () => {\n    return this.state.textarea || '';\n  }\n  \n  onClick_elButton = async () => {\n    let newVal = this.getValue_elTextarea();\n    \n    let transformValue = (input) => {\n      // This function modifies the value written to the target data slot.\n      // There is a variable named 'input' that provides the input value.\n      const notready = \"(情報未入力)\"\n      \n      const mission = this.context.appActions.dataSlots['ds_q1'] || notready ;\n      const position = this.context.appActions.dataSlots['ds_q2'] || notready ;\n      const domain = this.context.appActions.dataSlots['ds_q3'] || notready ;\n      const market = \"\" || notready ;\n      const issue = input || notready ;\n      \n      const text1 = \"あなたは世界中の企業の課題解決を助けてきた実績のあるコンサルティングファームのコンサルタントです。\";\n      const text2 = `${domain}で${mission}を検討している${position}の顧客から相談されています。以下「」内の課題について助言を作成してください。`;\n      const text3 = \"助言の最後に、相談者に参考となる具体的な事例を２つ挙げてください。\";\n      \n      const role_system = text1+text2+text3 ;\n      const role_user = `課題は「${issue}」です。` ;\n      \n      return( \"role.system:\"+role_system+\", role.user:\"+role_user ) ;\n    }\n    newVal = transformValue(newVal);\n    \n    this.context.appActions.updateDataSlot('ds_prompt', newVal);\n  \n    // Write your script here\n    \n    const datetime = new Date().toString() ;\n    //this.context.appActions.dataSlots['ds_stamp'] = datetime ;\n    const record = this.context.appActions.getDataSheet('records').items[0] ;\n    record[ \"stamp\"] = datetime ;\n    \n  \n  }\n  \n  \n  onClick_elButton2 = async () => {\n    // Show message popup\n    window.alert(\"プロンプト設計中のためAIと接続していません\");\n  \n  }\n  \n  \n  render() {\n    let layoutFlowStyle = {};\n    let baseStyle = {};\n    if (this.context.transitionId && this.context.transitionId.length > 0 && this.context.atTopOfScreenStack && this.context.transitionForward) {\n      baseStyle.animation = '0.25s ease-in-out '+this.context.transitionId;\n    }\n    if ( !this.context.atTopOfScreenStack) {\n      layoutFlowStyle.height = '100vh';\n      layoutFlowStyle.overflow = 'hidden';\n    }\n    \n    const style_elBackground = {\n      width: '100%',\n      height: '100%',\n     };\n    const style_elBackground_outer = {\n      boxSizing: 'border-box',\n      backgroundColor: '#f6f6f6',\n     };\n    const style_elTitle = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'center',\n     };\n    const style_elHeadline = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    const style_elIntroduction = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    const style_elTextq1 = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    \n    let selection_picker1 = this.getValue_elPicker1();\n    // Source datasheet and selected data column for picker element 'picker1'\n    const dataSource_picker1 = this.context.appActions.getDataSheet('plcphase');\n    const valueColumnName_picker1 = 'label';\n    const labelColumnName_picker1 = 'label';\n    \n    const style_elPicker1 = {\n      pointerEvents: 'auto',\n     };\n    const style_elTextq2 = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    \n    let selection_picker2 = this.getValue_elPicker2();\n    // Source datasheet and selected data column for picker element 'picker2'\n    const dataSource_picker2 = this.context.appActions.getDataSheet('position');\n    const valueColumnName_picker2 = 'label';\n    const labelColumnName_picker2 = 'label';\n    \n    const style_elPicker2 = {\n      pointerEvents: 'auto',\n     };\n    const style_elTextq3 = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    \n    const style_elField = {\n      display: 'block',\n      textAlign: 'left',\n      pointerEvents: 'auto',\n     };\n    const style_elTestq3Copy = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    let transformPropValue_textcounter = (input) => {\n      // This function modifies the value for property 'text'.\n      // There is a variable named 'input' that provides the property value.\n      //\n      const count = (input)? input.length:0 ;\n      const error = (count>TEXTMAX)? \"オーバーです  \":\"\" ;\n      return `文字数${error} ${count}/${TEXTMAX}` ;\n    }\n    \n    const value_textcounter = ((val) => {\n      // make sure value is in string format\n      if (val instanceof String || typeof val === 'string') return val;\n      else {\n        try {\n          return JSON.stringify(val);\n        }\n        catch (e) {\n          return val.toString();\n        }\n      }\n    })(transformPropValue_textcounter((this.context.appActions.dataSlots ? this.context.appActions.dataSlots['ds_issue'] : '')));\n    \n    const style_elTextcounter = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'right',\n     };\n    \n    const style_elTextarea = {\n      display: 'block',\n      pointerEvents: 'auto',\n     };\n    let transformPropValue_button = (input) => {\n      // This function modifies the value for property 'enabled'.\n      // There is a variable named 'input' that provides the property value.\n      // The function must return 'true' (with apostrophes) for enabled value.\n      //\n      return (input && input.length<=TEXTMAX ) ;\n    }\n    \n    const enabledValue_button = transformPropValue_button((this.context.appActions.dataSlots ? this.context.appActions.dataSlots['ds_issue'] : ''));\n    \n    const style_elButton = {\n      display: 'block',\n      color: '(null)',\n      textAlign: 'center',\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n     };\n    let transformPropValue_query = (input) => {\n      // This function modifies the value for property 'text'.\n      // There is a variable named 'input' that provides the property value.\n      //\n      return \"prompt = \"+input;\n    }\n    \n    const value_query = ((val) => {\n      // make sure value is in string format\n      if (val instanceof String || typeof val === 'string') return val;\n      else {\n        try {\n          return JSON.stringify(val);\n        }\n        catch (e) {\n          return val.toString();\n        }\n      }\n    })(transformPropValue_query((this.context.appActions.dataSlots ? this.context.appActions.dataSlots['ds_prompt'] : '')));\n    \n    const style_elQuery = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'left',\n     };\n    \n    const value_stamp = ((val) => {\n      // make sure value is in string format\n      if (val instanceof String || typeof val === 'string') return val;\n      else {\n        try {\n          return JSON.stringify(val);\n        }\n        catch (e) {\n          return val.toString();\n        }\n      }\n    })(this.props.dataSheetRow ? this.props.dataSheetRow.stamp : '');\n    \n    const style_elStamp = {\n      color: 'rgba(0, 0, 0, 0.8500)',\n      textAlign: 'right',\n     };\n    let transformPropValue_button2 = (input) => {\n      // This function modifies the value for property 'enabled'.\n      // There is a variable named 'input' that provides the property value.\n      // The function must return 'true' (with apostrophes) for enabled value.\n      //\n      return (this.context.appActions.dataSlots['ds_prompt']!=null) ;\n    }\n    \n    const enabledValue_button2 = transformPropValue_button2((this.context.appActions.dataSlots ? this.context.appActions.dataSlots['ds_prompt'] : ''));\n    \n    const style_elButton2 = {\n      display: 'block',\n      color: '(null)',\n      textAlign: 'center',\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n     };\n    \n    return (\n      <div className=\"AppScreen StartScreen\" style={baseStyle}>\n        <div className=\"background\">\n          <div className=\"containerMinHeight elBackground\" style={style_elBackground_outer}>\n            <div className=\"appBg\" style={style_elBackground} />\n          </div>\n        </div>\n        \n        <div className=\"layoutFlow\" style={layoutFlowStyle}>\n          <div className=\"elTitle\">\n            <div className=\"headlineFont\" style={style_elTitle}>\n              <div>{this.context.locStrings.start_title}</div>\n            </div>\n          </div>\n          \n          <div className=\"elHeadline\">\n            <div className=\"baseFont\" style={style_elHeadline}>\n              <div>{this.context.locStrings.start_headline}</div>\n            </div>\n          </div>\n          \n          <div className=\"elIntroduction\">\n            <div className=\"baseFont\" style={style_elIntroduction}>\n              <div>{this.context.locStrings.start_introduction}</div>\n            </div>\n          </div>\n          \n          <div className=\"elTextq1\">\n            <div className=\"headlineFont\" style={style_elTextq1}>\n              <div>{this.context.locStrings.start_question_166092}</div>\n            </div>\n          </div>\n          \n          <div className=\"elPicker1\">\n            <Select className=\"baseFont\" style={style_elPicker1}  onChange={this.pickerValueChanged_elPicker1} value={selection_picker1} >\n              {dataSource_picker1.items.every(item => {\n                return item[valueColumnName_picker1] !== selection_picker1;\n              }) ? <Option value=''/> : null}\n              {dataSource_picker1.items.map(item => {\n                const colValue = item[valueColumnName_picker1];\n                const labelColValue = item[labelColumnName_picker1];\n                return <Option key={item.key} value={colValue} label={labelColValue} />\n              })}\n            </Select>\n          </div>\n          \n          <div className=\"elTextq2\">\n            <div className=\"headlineFont\" style={style_elTextq2}>\n              <div>{this.context.locStrings.start_question_169966}</div>\n            </div>\n          </div>\n          \n          <div className=\"elPicker2\">\n            <Select className=\"baseFont\" style={style_elPicker2}  onChange={this.pickerValueChanged_elPicker2} value={selection_picker2} >\n              {dataSource_picker2.items.every(item => {\n                return item[valueColumnName_picker2] !== selection_picker2;\n              }) ? <Option value=''/> : null}\n              {dataSource_picker2.items.map(item => {\n                const colValue = item[valueColumnName_picker2];\n                const labelColValue = item[labelColumnName_picker2];\n                return <Option key={item.key} value={colValue} label={labelColValue} />\n              })}\n            </Select>\n          </div>\n          \n          <div className=\"elTextq3\">\n            <div className=\"headlineFont\" style={style_elTextq3}>\n              <div>{this.context.locStrings.start_question_843610}</div>\n            </div>\n          </div>\n          \n          <div className=\"elField\">\n            <Input className=\"baseFont\" style={style_elField} type=\"text\" label={this.context.locStrings.start_field_543627} floatingLabel={true} onChange={this.textInputChanged_elField} value={this.getValue_elField()}  />\n          </div>\n          \n          <div className=\"elTestq3Copy\">\n            <div className=\"headlineFont\" style={style_elTestq3Copy}>\n              <div>{this.context.locStrings.start_testq3copy_34190}</div>\n            </div>\n          </div>\n          \n          <div className=\"elTextcounter\">\n            <div className=\"baseFont\" style={style_elTextcounter}>\n              <div>{value_textcounter}</div>\n            </div>\n          </div>\n          \n          <div className=\"elTextarea\">\n            <Textarea className=\"baseFont\" style={style_elTextarea}  floatingLabel={true} label={this.context.locStrings.start_textarea2_195442} onChange={this.textAreaChanged_elTextarea} value={this.getValue_elTextarea()}  />\n          </div>\n          \n          <div className=\"elButton\">\n            <Button className=\"actionFont\" style={style_elButton}  color=\"accent\" disabled={''+enabledValue_button !== 'true'} onClick={this.onClick_elButton} >\n              {this.context.locStrings.start_button_39620}\n            </Button>\n          </div>\n          \n          <div className=\"elQuery\">\n            <div className=\"baseFont\" style={style_elQuery}>\n              <div>{value_query}</div>\n            </div>\n          </div>\n          \n          <div className=\"elStamp\">\n            <div className=\"baseFont\" style={style_elStamp}>\n              <div>{value_stamp}</div>\n            </div>\n          </div>\n          \n          <div className=\"elButton2\">\n            <Button className=\"actionFont\" style={style_elButton2}  color=\"accent\" disabled={''+enabledValue_button2 !== 'true'} onClick={this.onClick_elButton2} >\n              {this.context.locStrings.start_buttoncopy_804957}\n            </Button>\n          </div>\n          \n          <div className=\"elSpacer\">\n            <div />\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n  \n}\n","export default class DataSheetBase {\n  constructor(id, updateCb) {\n    this.id = id;\n    this.updateCb = updateCb;\n    this.items = [];\n    this.requestedKeyPath = '';\n\n    this.makeDefaultItems();\n  }\n\n  makeDefaultItems() {\n    // subclasses can override\n  }\n\n\n  // -- these methods will typically be overridden in a subclass by a React Studio web service plugin.\n  //    'options' is an optional value that should be passed to a React Studio provided callback by a plugin implementer.\n  //    it can be used to identify async writes by caller code.\n\n  addItem(item, options) {\n    item.key = this.lastAvailableKey(this.items);\n    this.items.push(item);\n  }\n\n  removeItem(item, options) {\n    this.items = this.items.filter(i => i.key !== item.key);\n  }\n\n  replaceItemByRowIndex(idx, newItem, options) {\n    if (idx < 0 || idx >= this.items.length)\n      return;\n    this.items.splice(idx, 1, newItem);\n  }\n\n  replaceItemByKey(key, newItem, options) {\n    // this is the method that gets called for updates.\n    // a subclasser can override this method instead of the 'byRowIndex' variant if needed.\n    const idx = this.rowIndexForKey(key);\n    if (idx < 0)\n      return;\n    return this.replaceItemByRowIndex(idx, newItem, options);\n  }\n\n\n  // -- utility methods\n\n  rowIndexForKey(key) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].key === key)\n        return i;\n    }\n    return -1;\n  }\n\n  lastAvailableKey = function (arr) {\n    let lastKey = 0;\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i].key !== undefined && arr[i].key > lastKey)\n        lastKey = arr[i].key;\n    }\n    return ++lastKey;\n  }\n\n  setupArrayKeys = (json) => {\n    // for an array, ensure that items have a key (this is required by React)\n    let lastKey = this.lastAvailableKey(json);\n    for (var i = 0; i < json.length; i++) {\n      if (json[i].key === undefined)\n        json[i].key = lastKey++;\n    }\n  }\n\n  loadFromJson(json) {\n    if (Array.isArray(json)) {\n      this.setupArrayKeys(json);\n      this.items = json;\n    }\n    else if (json) {\n      // if we received a single JSON object, set it as the first row in the sheet.\n      // if there's a keypath specified, look up that first.\n      var keyPath = this.requestedKeyPath;\n      if ( !keyPath || keyPath.length < 1) {\n        if ( !json.key) json.key = 0;\n        this.items = [ json ];\n      } else {\n        // look for the requested key path within this object\n        var pathComps = keyPath.split('.');\n        for (var comp of pathComps) {\n          if ( !json.hasOwnProperty(comp)) break;\n          json = json[comp];\n        }\n        if (Array.isArray(json)) {\n          this.setupArrayKeys(json);\n          this.items = json;\n        } else {\n          if ( !json.key) json.key = 0;\n          this.items = [ json ];\n        }\n      }\n    }\n    else {\n      this.items = [];\n    }\n  }\n\n  expandSlotTemplateString(query, slots, outUsedSlotsArray /*optional*/) {\n    // this method parses the tiny template format offered in React Studio's data sheet settings.\n    // these template strings can contain references to data slot values, like this:\n    //\n    //     page=$slot('someDataSlot')&username=$slot('anotherDataSlot')\n\n    if (query.length < 1)\n      return \"\";\n\n    let scanIndex = 0;\n    let expanded = \"\";\n    while (scanIndex < query.length) {\n      let index = query.indexOf(\"$slot(\", scanIndex);\n      if (index === -1) {\n        index = query.length;\n      }\n      expanded += query.substring(scanIndex, index);\n      scanIndex = index;\n\n      if (index === query.length)\n        break;\n\n      scanIndex += \"$slot(\".length;\n\n      index = query.indexOf(\")\", scanIndex);\n      if (index !== -1) {\n        let slotRefStr = query.substring(scanIndex, index);\n        const firstChar = slotRefStr.charAt(0);\n        if (firstChar === '\\'' || firstChar === '\"') {\n          slotRefStr = slotRefStr.substring(1, slotRefStr.length - 1);\n        }\n        const slotValue = slots[slotRefStr] || '';\n        expanded += slotValue;\n\n        index += ')'.length;\n\n        if (outUsedSlotsArray && !outUsedSlotsArray.includes(slotRefStr)) {\n          outUsedSlotsArray.push(slotRefStr);\n        }\n      }\n      scanIndex = (index === -1) ? query.length : index;\n    }\n    return expanded;\n  }\n\n}\n","// eslint-disable-next-line\nimport React from 'react';\nimport DataSheetBase from './DataSheetBase.js';\n\nexport default class DataSheet_localizationSheet extends DataSheetBase {\n\n  constructor(id, updateCb) {\n    super(id, updateCb);\n    this.requestedKeyPath = \"\";  // this value can be specified in the React Studio data sheet UI\n  }\n\n  makeDefaultItems() {\n    // eslint-disable-next-line no-unused-vars\n    let key = 1;\n    // eslint-disable-next-line no-unused-vars\n    let item;\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_title\";\n    item['ja'] = \"イノベーション・ナビゲーター\\nたたき台\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_headline\";\n    item['ja'] = \"企業でイノベーションに取り組む方の壁打ちのきっかけをご提供するためのAIボットです。\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_introduction\";\n    item['ja'] = \"使い方：\\n前提条件を絞るために最初に３つの設問に回答いただいた後、自由文で疑問や悩み事をご入力ください。\\n\\nご注意：\\n入力された情報やAIとの対話内容はイノベーション支援のノウハウ向上のために社内の参考情報とすることがあります。\\n社外に開示することは決してございませんが、企業秘密にかかわる情報は入力しないでください。\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_question_166092\";\n    item['ja'] = \"Q：どのタイプのミッションに近いですか？\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_question_169966\";\n    item['ja'] = \"Q：どのような立場から取り組みますか？\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_question_843610\";\n    item['ja'] = \"Q：分野・業種を簡単にお教えください。\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_field_543627\";\n    item['ja'] = \"例）ヘルスケア関連機器メーカー\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_testq3copy_34190\";\n    item['ja'] = \"どんな課題でお悩みでしょうか？\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_text_302404\";\n    item['ja'] = \"文字数\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_textarea2_195442\";\n    item['ja'] = \"自由文入力（最大200文字）\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_button_39620\";\n    item['ja'] = \"送信する\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_text_785667\";\n    item['ja'] = \"プロンプト\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_buttoncopy_804957\";\n    item['ja'] = \"SUBMIT\";\n    \n    item = {};\n    this.items.push(item);\n    item['key'] = \"start_text_119480\";\n    item['ja'] = \"time stamp\";\n    \n    let storedItems = localStorage.getItem(this.id);\n    if (storedItems != null) {\n      this.items = JSON.parse(storedItems);\n    }\n  }\n\n  addItem(item, options) {\n    super.addItem(item, options);\n    \n    localStorage.setItem(this.id, JSON.stringify(this.items));\n  }\n\n  removeItem(item, options) {\n    super.removeItem(item, options);\n    \n    localStorage.setItem(this.id, JSON.stringify(this.items));\n  }\n\n  replaceItemByRowIndex(idx, newItem, options) {\n    super.replaceItemByRowIndex(idx, newItem, options);\n    \n    localStorage.setItem(this.id, JSON.stringify(this.items));\n  }\n\n  getStringsByLanguage = () => {\n    let stringsByLang = {};\n    for (let row of this.items) {\n      const locKey = row.key;\n      for (let key in row) {\n        if (key === 'key')\n          continue;\n        let langObj = stringsByLang[key] || {};\n        langObj[locKey] = row[key];\n        stringsByLang[key] = langObj;\n      }\n    }\n    return stringsByLang;\n  }\n\n}\n","// eslint-disable-next-line\nimport React from 'react';\nimport DataSheetBase from './DataSheetBase.js';\n\nexport default class DataSheet_plcphase extends DataSheetBase {\n\n  constructor(id, updateCb) {\n    super(id, updateCb);\n    this.requestedKeyPath = \"\";  // this value can be specified in the React Studio data sheet UI\n  }\n\n  makeDefaultItems() {\n    // eslint-disable-next-line no-unused-vars\n    let key = 1;\n    // eslint-disable-next-line no-unused-vars\n    let item;\n    \n    item = {};\n    this.items.push(item);\n    item['value'] = \"0\";\n    item['label'] = \"R&Dの出口戦略\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"新規事業の探索創出\";\n    item['value'] = \"1\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"新規事業の成長戦略\";\n    item['value'] = \"2\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"既存事業の競争戦略\";\n    item['value'] = \"3\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"既存事業の収益確保\";\n    item['value'] = \"4\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"ビジネスモデルの転換\";\n    item['value'] = \"5\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"業務プロセス改革\";\n    item['value'] = \"6\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"人材・組織の変革\";\n    item['value'] = \"7\";\n    item.key = key++;\n  }\n\n}\n","// eslint-disable-next-line\nimport React from 'react';\nimport DataSheetBase from './DataSheetBase.js';\n\nexport default class DataSheet_position extends DataSheetBase {\n\n  constructor(id, updateCb) {\n    super(id, updateCb);\n    this.requestedKeyPath = \"\";  // this value can be specified in the React Studio data sheet UI\n  }\n\n  makeDefaultItems() {\n    // eslint-disable-next-line no-unused-vars\n    let key = 1;\n    // eslint-disable-next-line no-unused-vars\n    let item;\n    \n    item = {};\n    this.items.push(item);\n    item['value'] = \"\";\n    item['label'] = \"経営者・経営層\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"中間役職層\";\n    item.key = key++;\n    \n    item = {};\n    this.items.push(item);\n    item['label'] = \"担当〜リーダー層\";\n    item.key = key++;\n  }\n\n}\n","// eslint-disable-next-line\nimport React from 'react';\nimport DataSheetBase from './DataSheetBase.js';\n\nexport default class DataSheet_records extends DataSheetBase {\n\n  constructor(id, updateCb) {\n    super(id, updateCb);\n    this.requestedKeyPath = \"\";  // this value can be specified in the React Studio data sheet UI\n  }\n\n  makeDefaultItems() {\n    // eslint-disable-next-line no-unused-vars\n    let key = 1;\n    // eslint-disable-next-line no-unused-vars\n    let item;\n  }\n\n}\n","import React, { Component } from 'react';\nimport LocalizedStrings from 'react-localization';\n// eslint-disable-next-line\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n// eslint-disable-next-line\nimport * as util from 'util';\nimport './App.css';\nimport ScreenContext from './ScreenContext.js';\nimport StartScreen from './StartScreen.js';\nimport DataSheet_localizationSheet from './DataSheet_localizationSheet.js';\nimport DataSheet_plcphase from './DataSheet_plcphase.js';\nimport DataSheet_position from './DataSheet_position.js';\nimport DataSheet_records from './DataSheet_records.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dataSheets = {};\n    this.dataSheets['localizationSheet'] = new DataSheet_localizationSheet('localizationSheet', this.dataSheetDidUpdate);\n    this.dataSheets['plcphase'] = new DataSheet_plcphase('plcphase', this.dataSheetDidUpdate);\n    this.dataSheets['position'] = new DataSheet_position('position', this.dataSheetDidUpdate);\n    this.dataSheets['records'] = new DataSheet_records('records', this.dataSheetDidUpdate);\n    this.dataSheetLoaded = {};\n\n    this.dataSlots = {};\n    this.dataSlots['ds_activeLang'] = localStorage.getItem('ds_activeLang') || \"ja\";\n    this.dataSlots['ds_issue'] = \"\";\n    this.dataSlots['ds_q1'] = \"\";\n    this.dataSlots['ds_q2'] = \"\";\n    this.dataSlots['ds_q3'] = \"\";\n    this.dataSlots['ds_q4'] = \"\";\n    this.dataSlots['ds_prompt'] = \"\";\n    this.dataSlots['ds_response'] = \"\";\n\n    this.updateLocalizationFromDataSheet(this.dataSheets['localizationSheet']);\n\n    this.state = {\n      screenTransitionForward: true,\n    }\n\n  }\n\n  windowDidResize = () => {\n    let w = window.innerWidth;\n    let formatId;\n    if (w < 576) formatId = 'narrow-phone';\n    else if (w < 768) formatId = 'wide-phone';\n    else if (w < 1024) formatId = 'narrow-tablet';\n    else formatId = 'wide-tablet';\n    if (formatId !== this.state.screenFormatId) {\n      this.setState({screenFormatId: formatId});\n    }\n  }\n\n  componentDidMount() {\n    this.windowDidResize();\n    window.addEventListener('resize', this.windowDidResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.windowDidResize);\n  }\n\n  isLoading() {\n    return this.state.loading;\n  }\n\n  goToScreen = (screenId, baseScreenId, props) => {\n    // Implemented with React Router's 'history' object.\n    // 'baseScreenId' is set when inside a container such as a tab bar.\n    let path = '/'+screenId;\n    if (baseScreenId && baseScreenId.length > 0) {\n      path = '/'+baseScreenId+path;\n      props = {};\n    }\n    this.props.history.push(path, {...props});\n    window.scrollTo(0, 0);\n  }\n\n  goBack = () => {\n    // Implemented with React Router's 'history' object.\n    this.props.history.goBack();\n  }\n\n  getDataSheet = (sheetId) => {\n    // This method is the default implementation and could be customized by a state management plugin.\n    return this.dataSheets[sheetId];\n  }\n\n  addToDataSheet = (sheetId, newRow, actionId) => {\n    // This method is the default implementation and could be customized by a state management plugin.\n    let sheet = this.dataSheets[sheetId];\n    if (sheet && newRow) {\n      let promise = sheet.addItem(newRow, this['serviceOptions_'+sheetId] || {});\n      this.setState({});\n      return promise;\n    }\n  }\n\n  updateInDataSheet = (sheetId, row, actionId) => {\n    // This method is the default implementation and could be customized by a state management plugin.\n    let sheet = this.dataSheets[sheetId];\n    if (sheet && row) {\n      let promise = sheet.replaceItemByKey(row.key, row, this['serviceOptions_'+sheetId] || {});\n      this.setState({});\n      return promise;\n    }\n  }\n\n  removeFromDataSheet = (sheetId, row) => {\n    let sheet = this.dataSheets[sheetId];\n    if (sheet && row) {\n      let promise = sheet.removeItem(row, this['serviceOptions_'+sheetId] || {});\n      this.setState({});\n      return promise;\n    }\n  }\n\n  updateDataSlot = (slotId, value, actionId) => {\n    // This method is the default implementation and could be customized by a state management plugin.\n    if (value === this.dataSlots[slotId])\n      return;\n\n    this.dataSlots[slotId] = value;\n\n    if (slotId === 'ds_activeLang') {\n      this.locStrings.setLanguage(value);\n    }\n    if (slotId === 'ds_activeLang') {\n      localStorage.setItem('ds_activeLang', value);\n    }\n    this.setState({});\n  }\n\n  dataSheetDidUpdate = (dataSheet) => {\n    // This method is the default implementation and could be customized by a state management plugin.\n    this.setState({});\n  }\n\n  updateLocalizationFromDataSheet = (dataSheet) => {\n    const stringsObj = dataSheet.getStringsByLanguage();\n    if (stringsObj && Object.keys(stringsObj).length > 0) {\n      this.locStrings = new LocalizedStrings(stringsObj);\n    } else {\n      this.locStrings = new LocalizedStrings({en: {}});\n    }\n    this.locStrings.setLanguage(this.dataSlots['ds_activeLang']);\n  }\n\n  createImageUrlFromProp = (prop) => {\n    if (prop instanceof Object) {\n      if (prop.type != null && prop.type === 'image' && prop.path != null) {\n        return \"(null)\"+prop.path;\n      }\n    }\n    return prop;\n  }\n\n  render() {\n    const makeScreen = (screenId, baseProps, atTop, forward, subpathId) => {\n      let screenCtxProps = {\n        ...baseProps,\n        atTopOfScreenStack: atTop,\n        transitionForward: forward,\n        appActions: this,\n        dataSheets: this.dataSheets,\n        locStrings: this.locStrings,\n        deviceInfo: {\n          screenFormatId: this.state.screenFormatId\n        },\n        'ds_activeLang': this.dataSlots['ds_activeLang'],\n        'ds_issue': this.dataSlots['ds_issue'],\n        'ds_q1': this.dataSlots['ds_q1'],\n        'ds_q2': this.dataSlots['ds_q2'],\n        'ds_q3': this.dataSlots['ds_q3'],\n        'ds_q4': this.dataSlots['ds_q4'],\n        'ds_prompt': this.dataSlots['ds_prompt'],\n        'ds_response': this.dataSlots['ds_response'],\n      };\n      let screen;\n      switch (screenId) {\n        case 'start':\n      // A data sheet row was specified as the data source for this screen, so carry those props + 'dataSheetRow'.\n      const dataSheetRow_StartScreen = this.dataSheets['records'].items[0];\n      const screenData_StartScreen = {\n        ...dataSheetRow_StartScreen,\n        dataSheetRow: dataSheetRow_StartScreen,\n      }\n          screen = <StartScreen {...baseProps} {...screenData_StartScreen} />;\n          break;\n        default:\n          screen = null;\n      }\n      if (screen) {\n        return <ScreenContext.Provider value={screenCtxProps}>{screen}</ScreenContext.Provider>;\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" render={(props) => makeScreen('start', props.location.state, true, true)} exact />\n          <Route path=\"/start\" render={(props) => {\n            return makeScreen('start', props.location.state, true, true);\n          }} />\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './mui.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}